/* Estilos para os ícones ODS com efeito flip */

.ods-container {
    display: flex;
    flex-wrap: wrap;
    gap: 15px; /* Espaçamento entre os ícones */
    justify-content: center; /* Centraliza os ícones se não preencherem a linha */
    margin-top: 15px;
}

.ods-flip-container {
    perspective: 1000px; /* Necessário para o efeito 3D */
    width: 150px; /* Largura do container do ícone */
    height: 150px; /* Altura do container do ícone */
    cursor: pointer; /* Indica que é clicável */
}

.ods-flipper-link {
    display: block; /* Garante que o link ocupe todo o espaço */
    width: 100%;
    height: 100%;
    text-decoration: none; /* Remove sublinhado do link */
    color: inherit; /* Herda a cor do texto */
}

.ods-flipper {
    position: relative;
    width: 100%;
    height: 100%;
    transition: transform 0.6s; /* Duração da animação de flip */
    transform-style: preserve-3d; /* Mantém o efeito 3D durante a animação */
}

/* Aplica a rotação no hover */
.ods-flip-container:hover .ods-flipper {
    transform: rotateY(180deg);
}

.ods-front,
.ods-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden; /* Esconde o lado de trás do elemento durante a animação */
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 8px; /* Bordas arredondadas */
    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.1); /* Sombra suave */
    overflow: hidden; /* Garante que o conteúdo não transborde */
    box-sizing: border-box; /* Garante que a imagem não aumente de tamanho ao girar */
}

.ods-front {
    background-color: #f0f0f0; /* Cor de fundo padrão para a frente */
    z-index: 2; /* Garante que a frente esteja sobre a parte de trás inicialmente */
}

.ods-front img {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain; /* Garante que a imagem caiba sem distorção */
}

/* Estilos gerais para a parte de trás */
.ods-back {
    /* background-color: #e0e0e0; Cor de fundo padrão removida, será definida por ODS */
    color: white; /* Cor do texto padrão para branco */
    transform: rotateY(180deg); /* Posiciona a parte de trás virada */
    flex-direction: column; /* Organiza título e texto verticalmente */
    padding: 8px; /* Espaçamento interno */
    text-align: center;
    line-height: 0.5; /* Espaçamento entre linhas */
}

/* Estilos para o título (h4) na parte de trás */
.ods-back h4 {
    margin: 0 0 5px 0;
    font-size: 0.8rem; /* Tamanho da fonte do título */
    font-weight: bold; /* Mantém o título em negrito */
    color: white; /* Garante que o título também seja branco */
}

/* Estilos para o parágrafo (p) na parte de trás */
.ods-back p {
    margin: 0;
    font-size: calc(0.8rem); 
    font-weight: normal; /* Remove negrito */
    color: white; /* Cor do texto branca */
    /* Evita que o texto quebre de forma estranha */
    word-break: keep-all; 
    hyphens: auto;
}

/* Cores de fundo específicas para cada ODS */
.ods-back[data-ods-number="1"] { background-color: rgb(229, 36, 59); }
.ods-back[data-ods-number="2"] { background-color: rgb(221, 168, 58); }
.ods-back[data-ods-number="3"] { background-color: rgb(76, 159, 56); }
.ods-back[data-ods-number="4"] { background-color: rgb(197, 25, 45); }
.ods-back[data-ods-number="5"] { background-color: rgb(255, 58, 33); }
.ods-back[data-ods-number="6"] { background-color: rgb(38, 189, 226); }
.ods-back[data-ods-number="7"] { background-color: rgb(252, 195, 11); }
.ods-back[data-ods-number="8"] { background-color: rgb(162, 25, 66); }
.ods-back[data-ods-number="9"] { background-color: rgb(253, 105, 37); }
.ods-back[data-ods-number="10"] { background-color: rgb(221, 19, 103); }
.ods-back[data-ods-number="11"] { background-color: rgb(253, 157, 36); }
.ods-back[data-ods-number="12"] { background-color: rgb(191, 139, 46); }
.ods-back[data-ods-number="13"] { background-color: rgb(63, 126, 68); }
.ods-back[data-ods-number="14"] { background-color: rgb(10, 151, 217); }
.ods-back[data-ods-number="15"] { background-color: rgb(86, 192, 43); }
.ods-back[data-ods-number="16"] { background-color: rgb(0, 104, 157); }
.ods-back[data-ods-number="17"] { background-color: rgb(25, 72, 106); }
.ods-back[data-ods-number="18"] { background-color: rgb(122, 49, 17); } /* Cor para ODS 18 adicionada */

/* Ajustes de Responsividade */
@media (max-width: 600px) {
    .ods-flip-container {
        width: 95px;
        height: 95px;
    }
    .ods-back p {
        font-size: calc(0.6rem); /* Ajusta o tamanho da fonte reduzida para telas menores */
    }
    .ods-back h4 {
        font-size: 0.7rem;
    }
}

/* SOBRESCREVE O EFEITO DE SCALE (ZOOM) NO HOVER, MANTENDO O FLIP */
.ods-flip-container:hover {
    transform: none !important; /* IMPEDE O AUMENTO DE TAMANHO (SCALE) */
    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.1); /* MANTÉM A SOMBRA ORIGINAL */
}

/* GARANTE QUE A ANIMAÇÃO DE GIRO CONTINUE FUNCIONANDO */
.ods-flip-container:hover .ods-flipper {
    transform: rotateY(180deg);
}
hat Prompt
ThinkingThoughts
(experimental)
Manual: 32768
Expand to view model thoughts

chevron_right
ThinkingThoughts
(experimental)
Auto
Expand to view model thoughts

chevron_right
ThinkingThoughts
(experimental)
Auto
Expand to view model thoughts

chevron_right
ThinkingThoughts
(experimental)
Auto
Expand to view model thoughts

chevron_right
ThinkingThoughts
(experimental)
Auto
Expand to view model thoughts

chevron_right
ThinkingThoughts
(experimental)
Auto
Expand to view model thoughts

chevron_right
ThinkingThoughts
(experimental)
Auto
Expand to view model thoughts

chevron_right
ThinkingThoughts
(experimental)
Auto
Expand to view model thoughts

chevron_right
ThinkingThoughts
(experimental)
Auto
Expand to view model thoughts

chevron_right
ThinkingThoughts
(experimental)
Auto
Expand to view model thoughts

chevron_right
ThinkingThoughts
(experimental)
Auto
Expand to view model thoughts

chevron_right
ThinkingThoughts
(experimental)
Auto
Expand to view model thoughts

chevron_right
ThinkingThoughts
(experimental)
Auto
Expand to view model thoughts

chevron_right
ThinkingThoughts
(experimental)
Auto
Expand to view model thoughts

chevron_right
ThinkingThoughts
(experimental)
Auto
Expand to view model thoughts

chevron_right
Compreendi perfeitamente! Peço desculpas pela confusão. A intenção era simplificar, mas acabamos perdendo a funcionalidade do "flip" que era essencial.
Vamos restaurar o comportamento de "girar e mostrar a descrição" usando seus novos arquivos SVG. A abordagem correta é usar o SVG como fundo da parte da frente do card, em vez de uma tag <img>. Isso nos dá o melhor dos dois mundos: o layout perfeito do SVG e a interatividade do CSS.
Você só precisará fazer uma alteração no JavaScript.
Arquivo a ser Modificado: js/filme.js
Onde: Dentro da função renderBnccCompetencies.
Ação: Substitua a função renderBnccCompetencies inteira pela versão corrigida abaixo. Ela restaura a estrutura do "flip" e usa seus SVGs como imagem de fundo.
Generated javascript
//======================================================================================
// INÍCIO DO CÓDIGO CORRIGIDO PARA RESTAURAR O FLIP
//======================================================================================
// FUNÇÃO PARA RENDERIZAR OS ÍCONES DAS COMPETÊNCIAS DA BNCC COM EFEITO FLIP E USANDO SVGS
async function renderBnccCompetencies(film) {
    if (!film.bnccCompetencias || film.bnccCompetencias.length === 0) return;

    const container = document.getElementById('bnccCompetenciesContainer');
    if (!container) return;

    try {
        // CARREGA O JSON PARA OBTER AS DESCRIÇÕES
        const response = await fetch('bncc_competencias.json');
        if (!response.ok) throw new Error('Falha ao carregar bncc_competencias.json');
        const todasCompetencias = await response.json();

        // O LINK É O MESMO PARA TODOS OS ÍCONES
        const bnccLink = "https://basenacionalcomum.mec.gov.br/abase/#introducao#competencias-gerais-da-base-nacional-comum-curricular:~:text=termos%20da%20LDB.-,COMPET%C3%8ANCIAS%20GERAIS%20DA%20EDUCA%C3%87%C3%83O%20B%C3%81SICA,-Valorizar%20e%20utilizar";

        // FILTRA APENAS AS COMPETÊNCIAS PRESENTES NO FILME
        const competenciasDoFilme = todasCompetencias.filter(comp =>
            film.bnccCompetencias.includes(comp.id)
        );

        // GERA O HTML RESTAURANDO A ESTRUTURA DO FLIP
        const competenciesHtml = competenciasDoFilme.map(comp => `
            <div class="ods-flip-container">
                <a href="${bnccLink}" target="_blank" rel="noopener noreferrer" class="ods-flipper-link" title="Competência ${comp.id}: ${comp.titulo} - Saiba mais na BNCC">
                    <div class="ods-flipper">
                        <!-- FRENTE DO CARD: USA O SVG COMO IMAGEM DE FUNDO -->
                        <div 
                            class="ods-front" 
                            style="background-image: url('bncc_icons/bncc_${comp.id}.svg'); background-size: cover; background-position: center;"
                        >
                            <!-- O CONTEÚDO VISUAL JÁ ESTÁ NO SVG, ENTÃO ESTE DIV FICA VAZIO -->
                        </div>
                        <!-- VERSO DO CARD: MOSTRA A DESCRIÇÃO -->
                        <div class="ods-back bncc-card" data-bncc-number="${comp.id}">
                            <p>${comp.descricao}</p>
                        </div>
                    </div>
                </a>
            </div>
        `).join('');

        container.innerHTML = `
            <h3><i class="fas fa-book-reader"></i> Competências Gerais da BNCC</h3>
            <div class="ods-container">
                ${competenciesHtml}
            </div>
        `;

    } catch (error) {
        console.error("Erro ao renderizar competências da BNCC:", error);
        container.innerHTML = '<p>Erro ao carregar ícones da BNCC.</p>';
    }
}
//======================================================================================
// FIM DO CÓDIGO CORRIGIDO
//======================================================================================
Use code with caution.
JavaScript
Passo 2: Adicionar o CSS Necessário (css/ods-styles.css)
Para que o verso do card tenha a cor correta, precisamos readicionar as regras de cor que havíamos removido.
Arquivo: css/ods-styles.css
Onde: Adicione este bloco de código no final do arquivo.
Generated css
/*======================================================================================
// INÍCIO DO CÓDIGO A SER ADICIONADO
//======================================================================================*/

/* CORES DE FUNDO PARA O VERSO DOS CARDS DA BNCC */
.bncc-card[data-bncc-number="1"] { background-color: rgb(229, 36, 59); }
.bncc-card[data-bncc-number="2"] { background-color: rgb(197, 25, 45); }
.bncc-card[data-bncc-number="3"] { background-color: rgb(253, 105, 37); }
.bncc-card[data-bncc-number="4"] { background-color: rgb(38, 189, 226); }
.bncc-card[data-bncc-number="5"] { background-color: rgb(0, 104, 157); }
.bncc-card[data-bncc-number="6"] { background-color: rgb(162, 25, 66); }
.bncc-card[data-bncc-number="7"] { background-color: rgb(191, 139, 46); }
.bncc-card[data-bncc-number="8"] { background-color: rgb(76, 159, 56); }
.bncc-card[data-bncc-number="9"] { background-color: rgb(221, 19, 103); }
.bncc-card[data-bncc-number="10"] { background-color: rgb(25, 72, 106); }
